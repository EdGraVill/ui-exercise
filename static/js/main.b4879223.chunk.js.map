{"version":3,"sources":["Auth/selectors.ts","Auth/slicer.ts","util/randomBetween.ts","util/Theme.tsx","util/regex.ts","Auth/LoginPage.tsx","Auth/hooks.ts","Auth/AuthGate.tsx","Auth/sagas.ts","Mail/slicer.ts","Mail/sagas.ts","store/createStore.ts","store/ReduxProvider.tsx","Mail/selectors.ts","Nav/Navbar.tsx","util/useSwitch.ts","Nav/Nav.tsx","Mail/MailList.tsx","App.tsx","index.tsx","Auth/googleLogo.svg"],"names":["authRootStateSelector","state","auth","isAuthLoadingSelector","createSelector","isFetching","isLoggedSelector","user","userInfoSelector","authErrorSelector","error","authInitialState","email","JSON","parse","localStorage","getItem","createSlice","initialState","name","reducers","restoreDefault","removeItem","login","action","payload","receiveUserInfo","setItem","stringify","rejectUserInfo","removeError","authActions","actions","authReducer","reducer","randomBetween","start","end","Error","Math","floor","random","theme","createMuiTheme","typography","fontFamily","palette","primary","main","Themed","children","ThemeProvider","emailRegex","Container","styled","div","useStyles","makeStyles","card","alignItems","border","boxSizing","display","flexFlow","padding","maxWidth","width","title","fontSize","marginTop","textAlign","subtitle","input","disclaimer","color","button","textTransform","helperText","helperTextIcon","marginRight","LoginPage","dispatch","useDispatch","React","setEmail","useSelector","clearError","isLoading","loginFunction","formatedEmail","includes","logoutFunction","useAuth","onLogin","test","classes","Paper","className","src","googleLogo","alt","Typography","TextField","id","label","variant","value","onChange","currentTarget","trim","Grid","container","Link","href","Button","onClick","CircularProgress","size","AuthGate","fetchUserInfoEffect","authSagas","call","axios","get","response","put","data","err","message","takeLatest","type","lastKnownError","mailList","fetchMails","receiveMails","uniqueList","reduce","prev","curr","forEach","mail","Object","values","sort","a","b","Number","Date","date","rejectMails","mailActions","mailReducer","fetchMailsEffect","mailSagas","default","messages","takeEvery","mapReducer","ReduxProvider","store","sagaMiddleware","createSagaMiddleware","configureStore","combineReducers","devTools","process","middleware","getDefaultMiddleware","run","createStore","mailRootStateSelector","mailListSelector","mails","isFetchingMailsSelector","mailsTagsSelector","uniqueTags","map","tags","flat","tag","console","log","keys","isOpened","css","Header","Logo","img","Avatar","MaterialAvatar","Links","margin","search","position","borderRadius","shape","backgroundColor","fade","common","white","flexGrow","spacing","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","avatar","link","fontWeight","linkText","linkIcon","Navbar","userInfo","isTrue","setValue","switchFn","useSwitch","switchNavbar","pathname","useLocation","push","useHistory","onLogout","goTo","path","IconButton","srcSet","aria-hidden","InputBase","placeholder","root","inputProps","first_name","startIcon","key","Children","Nav","MailList","undefined","replace","filter","isFetchingMails","App","render","Theme","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b4879223.chunk.js","sourcesContent":["import { State } from \"../store\";\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nexport const authRootStateSelector = (state: State) => state.auth;\n\nexport const isAuthLoadingSelector = createSelector(\n  authRootStateSelector,\n  auth => auth.isFetching,\n);\n\nexport const isLoggedSelector = createSelector(\n  authRootStateSelector,\n  auth => auth.user !== null,\n);\n\nexport const userInfoSelector = createSelector(\n  authRootStateSelector,\n  auth => auth.user,\n);\n\nexport const authErrorSelector = createSelector(\n  authRootStateSelector,\n  auth => auth.error,\n);\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { UserInfo } from \"../types\";\n\nexport const STORE_KEY = 'USER_INFO';\n\nexport const authInitialState = {\n  email: '',\n  error: null as string | null,\n  isFetching: false,\n  user: JSON.parse(localStorage.getItem(STORE_KEY) || 'null') as UserInfo | null,\n};\n\nexport const { actions: authActions, reducer: authReducer } = createSlice({\n  initialState: authInitialState,\n  name: 'auth',\n  reducers: {\n    restoreDefault() {\n      localStorage.removeItem(STORE_KEY);\n\n      return authInitialState;\n    },\n    login(state, action: PayloadAction<string>) {\n      state.isFetching = true;\n      state.email = action.payload;\n    },\n    receiveUserInfo(state, action: PayloadAction<UserInfo>) {\n      state.isFetching = false;\n      state.user = action.payload;\n      state.user.email = state.email;\n\n      localStorage.setItem(STORE_KEY, JSON.stringify(state.user));\n    },\n    rejectUserInfo(state, action: PayloadAction<string>) {\n      state.isFetching = false;\n      state.error = action.payload;\n    },\n    removeError(state) {\n      state.error = null;\n    },\n  },\n});\n","const randomBetween = (start: number, end: number) => {\n  if (end < start) {\n    throw new Error('Left number should be lower than right number');\n  }\n\n  return Math.floor(Math.random() * end) + start;\n};\n\nexport default randomBetween;\n","import * as React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\n\n// const defaultTheme = createMuiTheme();\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n  palette: {\n    primary: {\n      main: 'rgb(26, 115, 232)',\n    },\n    error: {\n      main: '#d93025',\n    },\n  },\n});\n\nconst Themed: React.FC = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default Themed;\n","export const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","import * as React from 'react';\nimport { useAuth } from './hooks';\nimport styled from 'styled-components';\nimport { Paper, Typography, makeStyles, TextField, Link, Button, Grid, CircularProgress } from '@material-ui/core';\nimport googleLogo from './googleLogo.svg';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from './slicer';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { emailRegex } from '../util';\n\nconst Container = styled.div`\n  align-items: center;\n  background-color: white;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst useStyles = makeStyles({\n  card: {\n    alignItems: 'center',\n    border: '1px solid #dadce0',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    padding: '40px 40px 36px',\n    maxWidth: 448,\n    width: '100%',\n  },\n  title: {\n    fontFamily: 'Product Sans',\n    fontSize: 24,\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  subtitle: {\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  input: {\n    marginTop: 32,\n    width: '100%',\n  },\n  disclaimer: {\n    color: '#5f6368',\n    fontSize: 14,\n    marginTop: 32,\n  },\n  button: {\n    fontFamily: 'Product Sans',\n    marginTop: 32,\n    textTransform: 'capitalize',\n  },\n  helperText: {\n    fontSize: 12,\n  },\n  helperTextIcon: {\n    fontSize: 14,\n    marginRight: 8,\n  },\n});\n\nconst LoginPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = React.useState('');\n  const { clearError, error, isLoading, loginFunction } = useAuth();\n\n  const onLogin = React.useCallback(() => {\n    if (email && ((email.includes('@') && emailRegex.test(email)) || (!email.includes('@')))) {\n      loginFunction(email);\n    } else if (!email) {\n      dispatch(authActions.rejectUserInfo('Enter an email'));\n    } else {\n      dispatch(authActions.rejectUserInfo('Enter a valid email'));\n    }\n  }, [dispatch, email, loginFunction]);\n\n  React.useEffect(() => {\n    clearError();\n  }, [clearError, email]);\n\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.card}>\n        <img src={googleLogo} alt=\"Google\" />\n        <Typography className={classes.title}>Sign In</Typography>\n        <Typography className={classes.subtitle}>to continue to Gmail</Typography>\n        <TextField\n          className={classes.input}\n          id=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={({ currentTarget: { value } }) => setEmail(value.trim())}\n          error={!!error}\n          helperText={error && (\n            <Grid container>\n              <ErrorIcon className={classes.helperTextIcon} />\n              <Typography className={classes.helperText}>{error}</Typography>\n            </Grid>\n          )}\n        />\n        <Typography className={classes.disclaimer}>\n          Not your computer? Use a private browsing window to sign in.{' '}\n          <Link href=\"https://support.google.com/accounts?p=signin_privatebrowsing&hl=en\">\n            Learn more\n          </Link>\n        </Typography>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onLogin}\n        >\n          {isLoading && <CircularProgress color=\"inherit\" size={24} />}\n          {!isLoading && 'Next'}\n        </Button>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions } from './slicer';\nimport { isAuthLoadingSelector, authErrorSelector } from './selectors';\n\ninterface UseAuthReturn {\n  error: string | null;\n  isLoading: boolean;\n  loginFunction: (email: string) => void;\n  logoutFunction: () => void;\n  clearError: () => void;\n}\n\nexport const useAuth = (): UseAuthReturn => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(authErrorSelector);\n\n  const clearError = React.useCallback(() => {\n    dispatch(authActions.removeError());\n  }, [dispatch]);\n\n  const isLoading = useSelector(isAuthLoadingSelector);\n\n  const loginFunction = React.useCallback((email: string) => {\n    const formatedEmail = email.includes('@') ? email : `${email}@salesloft.com`;\n\n    dispatch(authActions.login(formatedEmail));\n  }, [dispatch]);\n\n  const logoutFunction = React.useCallback(() => {\n    dispatch(authActions.restoreDefault());\n  }, [dispatch]);\n\n  return {\n    error,\n    clearError,\n    isLoading,\n    loginFunction,\n    logoutFunction,\n  };\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { isLoggedSelector } from './selectors';\nimport LoginPage from './LoginPage';\n\nconst AuthGate: React.FC = ({ children }) => {\n  const isLogged = useSelector(isLoggedSelector);\n\n  if (!isLogged) {\n    return <LoginPage />\n  }\n\n  return <>{children}</>;\n};\n\nexport default AuthGate;\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { authActions } from './slicer';\nimport axios, { AxiosResponse } from 'axios';\nimport { randomBetween } from '../util';\nimport { UserInfo } from '../types';\n\ninterface UserResponse {\n  data: UserInfo;\n  ad: any;\n}\n\nexport function* fetchUserInfoEffect() {\n  try {\n    const response: AxiosResponse<UserResponse> = yield call(axios.get, `https://reqres.in/api/users/${randomBetween(0, 12)}`);\n\n    yield put(authActions.receiveUserInfo(response.data.data));\n  } catch (error) {\n    const err = error.response?.data || error.message || 'Unknown Error';\n\n    yield put(authActions.rejectUserInfo(err));\n  }\n}\n\nexport function* authSagas() {\n  yield takeLatest(authActions.login.type, fetchUserInfoEffect);\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { Mail } from \"../types\";\n\nexport const mailInitialState = {\n  isFetching: false,\n  lastKnownError: null as string | null,\n  mailList: [] as Mail[],\n}\n\nexport const { actions: mailActions, reducer: mailReducer } = createSlice({\n  initialState: mailInitialState,\n  name: 'mail',\n  reducers: {\n    fetchMails(state) {\n      state.isFetching = true;\n    },\n    receiveMails(state, { payload }: PayloadAction<Mail[]>) {\n      const uniqueList: { [id: number]: Mail } = state.mailList.reduce((prev, curr) => ({\n        ...prev,\n        [curr.id]: curr,\n      }), {});\n\n      payload.forEach((mail) => {\n        uniqueList[mail.id] = mail;\n      });\n\n      state.isFetching = false;\n      state.mailList = Object.values(uniqueList)\n        .sort((a, b) => Number(new Date(b.date)) - Number(new Date(a.date)));\n    },\n    rejectMails(state, { payload }: PayloadAction<string>) {\n      state.isFetching = false;\n      state.lastKnownError = payload;\n    },\n  },\n})\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { mailActions } from './slicer';\nimport { Mail } from '../types';\n\nexport function* fetchMailsEffect() {\n  try {\n    const data: { default: { messages: Mail[] } } = yield import('./emails.json');\n\n    yield put(mailActions.receiveMails(data.default.messages));\n  } catch (error) {\n    yield put(mailActions.rejectMails(error.message));\n  }\n}\n\nexport function* mailSagas() {\n  yield takeEvery(mailActions.fetchMails.type, fetchMailsEffect);\n}\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  StateFromReducersMapObject,\n  combineReducers,\n  EnhancedStore,\n  CombinedState,\n  AnyAction,\n  Middleware,\n} from '@reduxjs/toolkit';\nimport createSagaMiddleware, { SagaMiddleware } from 'redux-saga';\nimport { authReducer, authSagas } from '../Auth';\nimport { mailReducer, mailSagas } from '../Mail';\n\nconst mapReducer = {\n  auth: authReducer,\n  mail: mailReducer,\n};\n\nexport type State = StateFromReducersMapObject<typeof mapReducer>;\nexport type Store = EnhancedStore<CombinedState<State>, AnyAction, Middleware<SagaMiddleware>[]>\n\nexport const createStore = (): Store => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = configureStore({\n    reducer: combineReducers(mapReducer),\n    devTools: process.env.NODE_ENV !== 'production',\n    middleware: [...getDefaultMiddleware(), sagaMiddleware],\n  });\n\n  sagaMiddleware.run(authSagas);\n  sagaMiddleware.run(mailSagas);\n\n  return store;\n}\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from './createStore';\n\nconst ReduxProvider: React.FC = ({ children }) => {\n  const store = React.useMemo(() => createStore(), []);\n\n  return (\n    <Provider store={store}>\n      {children}\n    </Provider>\n  );\n};\n\nexport default ReduxProvider;\n","import { State } from \"../store\";\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nexport const mailRootStateSelector = (state: State) => state.mail;\n\nexport const mailListSelector = createSelector(\n  mailRootStateSelector,\n  mails => mails.mailList,\n);\n\nexport const isFetchingMailsSelector = createSelector(\n  mailRootStateSelector,\n  mails => mails.isFetching,\n);\n\nexport const lastMailsKnownErrorSelector = createSelector(\n  mailRootStateSelector,\n  mails => mails.lastKnownError,\n);\n\nexport const mailsTagsSelector = createSelector(\n  mailListSelector,\n  (mailList) => {\n    const uniqueTags: { [tag: string]: number } = {};\n\n    mailList.map(({ tags }) => tags).flat().forEach((tag) => {\n      if (!uniqueTags[tag]) {\n        uniqueTags[tag] = 1;\n      } else {\n        uniqueTags[tag] += 1;\n      }\n    });\n\n    console.log(uniqueTags);\n\n    return Object.keys(uniqueTags).sort((a, b) => uniqueTags[b] - uniqueTags[a]);\n  }\n);\n\nexport const mailListByTagSelector = (tag?: string) => createSelector(\n  mailListSelector,\n  mailList => tag ? mailList.filter(mail => mail.tags.includes(tag)) : mailList,\n);\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSwitch } from '../util';\nimport { IconButton, makeStyles, InputBase, fade, Avatar as MaterialAvatar, Button } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userInfoSelector, authActions } from '../Auth';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport { mailsTagsSelector } from '../Mail/selectors';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst Container = styled.div<{ isOpened: boolean }>`\n  ${({ isOpened }) => css`\n    align-items: stretch;\n    box-sizing: border-box;\n    display: flex;\n    flex-flow: column nowrap;\n    transition: all .3s cubic-bezier(.25, .8, .25, 1);\n    width: ${isOpened ? 256 : 72}px;\n\n    @media screen and (max-width: 400px) {\n      width: ${isOpened ? 256 : 0}px;\n    }\n  `}\n`;\n\nconst Header = styled.div`\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  padding: 8px;\n  width: 100vw;\n`;\n\nconst Logo = styled.img`\n  margin-right: 70px;\n\n  @media screen and (max-width: 400px) {\n    display: none;\n  }\n`;\n\nconst Avatar = styled(MaterialAvatar)`\n`\n\nconst Links = styled.div`\n  align-items: stretch;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  overflow: hidden;\n  padding: 30px 12px 0 20px;\n  width: 100%;\n`;\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: '0 4px',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  avatar: {\n    padding: 0,\n  },\n  link: {\n    borderRadius: 18,\n    fontSize: 14,\n    textTransform: 'capitalize',\n    '&.active': {\n      backgroundColor: '#fce8e6',\n      color: '#d93025',\n      fontWeight: 'bold',\n    },\n  },\n  linkText: {\n    justifyContent: 'flex-start',\n    textAlign: 'left',\n  },\n  linkIcon: {\n    marginRight: 18,\n    paddingLeft: 6,\n  },\n}));\n\nconst Navbar: React.FC = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(userInfoSelector);\n  const [isOpened, switchNavbar] = useSwitch(true);\n  const tags = useSelector(mailsTagsSelector);\n  const { pathname } = useLocation();\n  const { push } = useHistory();\n\n  const classes = useStyles();\n\n  const onLogout = React.useCallback(() => {\n    dispatch(authActions.restoreDefault());\n  }, [dispatch]);\n\n  const goTo = React.useCallback((path: string) => () => {\n    push(path);\n  }, [push]);\n\n  if (!userInfo) {\n    return null;\n  }\n\n  console.log(pathname);\n\n  return (\n    <Container isOpened={isOpened}>\n      <Header>\n        <IconButton className={classes.button} onClick={switchNavbar}>\n          <MenuIcon />\n        </IconButton>\n        <Logo\n          src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x.png\"\n          srcSet=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x.png 1x, https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_2x.png 2x \"\n          alt=\"\"\n          aria-hidden=\"true\"\n        />\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n        <IconButton className={classes.avatar} onClick={onLogout}>\n          <Avatar alt={userInfo.first_name} src={userInfo.avatar} />\n        </IconButton>\n      </Header>\n      <Links>\n        <Button\n          color=\"default\"\n          classes={{ root: classes.link, label: classes.linkText }}\n          className={pathname === '/' ? 'active' : ''}\n          onClick={goTo('/')}\n          startIcon={<InboxIcon className={classes.linkIcon} />}\n          variant=\"text\"\n        >\n          Inbox\n        </Button>\n        {tags.map(tag => (\n          <Button\n            color=\"default\"\n            classes={{ root: classes.link, label: classes.linkText }}\n            className={pathname === `/tags/${tag}` ? 'active' : ''}\n            key={tag}\n            onClick={goTo(`/tags/${tag}`)}\n            startIcon={<InboxIcon className={classes.linkIcon} />}\n            variant=\"text\"\n          >\n            {tag}\n          </Button>\n        ))}\n      </Links>\n    </Container>\n  );\n};\n\nexport default Navbar;\n","import * as React from 'react';\n\nexport default function useSwitch(initialState = false): [boolean, () => void] {\n  const [isTrue, setValue] = React.useState(initialState);\n\n  const switchFn = React.useCallback(() => {\n    setValue(!isTrue);\n  }, [isTrue]);\n\n  return [isTrue, switchFn];\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport Navbar from './Navbar';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst Container = styled.div`\n  align-items: stretch;\n  background-color: white;\n  display: flex;\n  flex-direction: row nowrap;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst Children = styled.div`\n  box-sizing: border-box;\n  flex-grow: 1;\n  margin-top: 64px;\n`;\n\nconst Nav: React.FC = ({ children }) => (\n  <Container>\n    <BrowserRouter>\n      <Navbar />\n      <Children>{children}</Children>\n    </BrowserRouter>\n  </Container>\n);\n\nexport default Nav;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { mailActions } from './slicer';\nimport { useLocation } from 'react-router-dom';\nimport { mailListByTagSelector, isFetchingMailsSelector } from './selectors';\nimport { CircularProgress } from '@material-ui/core';\n\nconst MailList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const mailList = useSelector(mailListByTagSelector(pathname === '/' ? undefined : pathname.replace('/tags/', '')));\n  const isFetchingMails = useSelector(isFetchingMailsSelector);\n  \n  React.useEffect(() => {\n    dispatch(mailActions.fetchMails());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isFetchingMails && <CircularProgress />}\n      <pre>{JSON.stringify(mailList, undefined, 2)}</pre>\n    </div>\n  );\n};\n\nexport default MailList;\n","import * as React from 'react';\nimport { Nav } from './Nav';\nimport MailList from './Mail/MailList';\n\nconst App: React.FC = () => <Nav><MailList /></Nav>;\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { ReduxProvider } from './store';\nimport { AuthGate } from './Auth';\nimport './fonts/fonts.css';\nimport { Theme } from './util';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <ReduxProvider>\n      <Theme>\n        <AuthGate>\n          <App />\n        </AuthGate>\n      </Theme>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/googleLogo.6f6f3f0e.svg\";"],"sourceRoot":""}